"use strict";// Copyright 2019 - present Xlab
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
var cov_1g1hk0x43k=function(){var path="/Users/ben/mydata/gitHubDir/ben-open-digger/hypertrons/app/lua-vm/lua-vm.ts";var hash="4a4a14c043a52348a5d322a9473e1b3e4a865611";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/ben/mydata/gitHubDir/ben-open-digger/hypertrons/app/lua-vm/lua-vm.ts",statementMap:{"0":{start:{line:15,column:0},end:{line:15,column:62}},"1":{start:{line:16,column:16},end:{line:16,column:32}},"2":{start:{line:17,column:18},end:{line:17,column:61}},"3":{start:{line:18,column:19},end:{line:18,column:50}},"4":{start:{line:19,column:19},end:{line:19,column:50}},"5":{start:{line:20,column:18},end:{line:20,column:48}},"6":{start:{line:21,column:18},end:{line:21,column:48}},"7":{start:{line:22,column:19},end:{line:22,column:50}},"8":{start:{line:23,column:13},end:{line:23,column:26}},"9":{start:{line:24,column:15},end:{line:24,column:30}},"10":{start:{line:25,column:12},end:{line:25,column:33}},"11":{start:{line:26,column:16},end:{line:26,column:41}},"12":{start:{line:27,column:22},end:{line:27,column:89}},"13":{start:{line:30,column:8},end:{line:30,column:41}},"14":{start:{line:32,column:20},end:{line:32,column:29}},"15":{start:{line:33,column:8},end:{line:37,column:60}},"16":{start:{line:38,column:8},end:{line:41,column:11}},"17":{start:{line:39,column:12},end:{line:39,column:88}},"18":{start:{line:40,column:12},end:{line:40,column:35}},"19":{start:{line:42,column:8},end:{line:42,column:29}},"20":{start:{line:45,column:8},end:{line:45,column:40}},"21":{start:{line:46,column:8},end:{line:51,column:9}},"22":{start:{line:47,column:22},end:{line:47,column:56}},"23":{start:{line:48,column:12},end:{line:50,column:13}},"24":{start:{line:49,column:16},end:{line:49,column:47}},"25":{start:{line:52,column:8},end:{line:52,column:78}},"26":{start:{line:53,column:8},end:{line:53,column:46}},"27":{start:{line:56,column:8},end:{line:58,column:9}},"28":{start:{line:57,column:12},end:{line:57,column:54}},"29":{start:{line:59,column:8},end:{line:59,column:33}},"30":{start:{line:60,column:8},end:{line:60,column:20}},"31":{start:{line:63,column:24},end:{line:95,column:9}},"32":{start:{line:65,column:28},end:{line:73,column:13}},"33":{start:{line:66,column:30},end:{line:66,column:47}},"34":{start:{line:67,column:29},end:{line:67,column:31}},"35":{start:{line:68,column:16},end:{line:71,column:17}},"36":{start:{line:68,column:29},end:{line:68,column:30}},"37":{start:{line:69,column:34},end:{line:69,column:62}},"38":{start:{line:70,column:20},end:{line:70,column:37}},"39":{start:{line:72,column:16},end:{line:72,column:28}},"40":{start:{line:74,column:25},end:{line:74,column:34}},"41":{start:{line:76,column:24},end:{line:76,column:50}},"42":{start:{line:77,column:12},end:{line:94,column:13}},"43":{start:{line:79,column:16},end:{line:88,column:19}},"44":{start:{line:80,column:20},end:{line:87,column:21}},"45":{start:{line:82,column:24},end:{line:82,column:53}},"46":{start:{line:85,column:24},end:{line:85,column:50}},"47":{start:{line:86,column:24},end:{line:86,column:53}},"48":{start:{line:89,column:16},end:{line:89,column:43}},"49":{start:{line:93,column:16},end:{line:93,column:51}},"50":{start:{line:97,column:8},end:{line:97,column:60}},"51":{start:{line:98,column:8},end:{line:98,column:23}},"52":{start:{line:101,column:8},end:{line:105,column:9}},"53":{start:{line:104,column:12},end:{line:104,column:29}},"54":{start:{line:106,column:8},end:{line:106,column:43}},"55":{start:{line:107,column:21},end:{line:107,column:43}},"56":{start:{line:108,column:8},end:{line:191,column:9}},"57":{start:{line:110,column:16},end:{line:110,column:50}},"58":{start:{line:112,column:16},end:{line:112,column:52}},"59":{start:{line:114,column:16},end:{line:114,column:51}},"60":{start:{line:116,column:16},end:{line:116,column:52}},"61":{start:{line:120,column:16},end:{line:120,column:44}},"62":{start:{line:121,column:30},end:{line:121,column:72}},"63":{start:{line:122,column:16},end:{line:143,column:18}},"64":{start:{line:124,column:40},end:{line:124,column:57}},"65":{start:{line:125,column:20},end:{line:125,column:69}},"66":{start:{line:126,column:20},end:{line:129,column:23}},"67":{start:{line:128,column:24},end:{line:128,column:50}},"68":{start:{line:131,column:30},end:{line:131,column:79}},"69":{start:{line:132,column:20},end:{line:135,column:21}},"70":{start:{line:134,column:24},end:{line:134,column:110}},"71":{start:{line:136,column:20},end:{line:136,column:36}},"72":{start:{line:137,column:20},end:{line:141,column:21}},"73":{start:{line:140,column:24},end:{line:140,column:56}},"74":{start:{line:142,column:20},end:{line:142,column:31}},"75":{start:{line:147,column:16},end:{line:153,column:30}},"76":{start:{line:148,column:20},end:{line:148,column:49}},"77":{start:{line:149,column:20},end:{line:149,column:50}},"78":{start:{line:150,column:20},end:{line:150,column:38}},"79":{start:{line:154,column:16},end:{line:181,column:17}},"80":{start:{line:156,column:32},end:{line:156,column:34}},"81":{start:{line:157,column:20},end:{line:164,column:21}},"82":{start:{line:157,column:33},end:{line:157,column:34}},"83":{start:{line:158,column:24},end:{line:158,column:53}},"84":{start:{line:159,column:34},end:{line:159,column:59}},"85":{start:{line:160,column:24},end:{line:160,column:42}},"86":{start:{line:161,column:24},end:{line:162,column:34}},"87":{start:{line:162,column:28},end:{line:162,column:34}},"88":{start:{line:163,column:24},end:{line:163,column:36}},"89":{start:{line:165,column:20},end:{line:165,column:31}},"90":{start:{line:168,column:32},end:{line:168,column:34}},"91":{start:{line:169,column:20},end:{line:169,column:39}},"92":{start:{line:170,column:20},end:{line:179,column:21}},"93":{start:{line:173,column:38},end:{line:173,column:63}},"94":{start:{line:174,column:36},end:{line:174,column:61}},"95":{start:{line:175,column:24},end:{line:177,column:25}},"96":{start:{line:176,column:28},end:{line:176,column:45}},"97":{start:{line:178,column:24},end:{line:178,column:42}},"98":{start:{line:180,column:20},end:{line:180,column:31}},"99":{start:{line:183,column:16},end:{line:183,column:50}},"100":{start:{line:185,column:16},end:{line:185,column:33}},"101":{start:{line:187,column:16},end:{line:187,column:28}},"102":{start:{line:189,column:16},end:{line:189,column:74}},"103":{start:{line:190,column:16},end:{line:190,column:33}},"104":{start:{line:194,column:21},end:{line:194,column:33}},"105":{start:{line:195,column:8},end:{line:260,column:9}},"106":{start:{line:197,column:16},end:{line:197,column:45}},"107":{start:{line:198,column:16},end:{line:198,column:22}},"108":{start:{line:200,column:16},end:{line:200,column:45}},"109":{start:{line:201,column:16},end:{line:201,column:22}},"110":{start:{line:203,column:16},end:{line:203,column:46}},"111":{start:{line:204,column:16},end:{line:204,column:22}},"112":{start:{line:206,column:16},end:{line:250,column:17}},"113":{start:{line:207,column:20},end:{line:207,column:29}},"114":{start:{line:209,column:21},end:{line:250,column:17}},"115":{start:{line:211,column:20},end:{line:211,column:40}},"116":{start:{line:212,column:20},end:{line:220,column:23}},"117":{start:{line:213,column:34},end:{line:213,column:59}},"118":{start:{line:214,column:24},end:{line:219,column:25}},"119":{start:{line:215,column:28},end:{line:215,column:58}},"120":{start:{line:218,column:28},end:{line:218,column:46}},"121":{start:{line:222,column:21},end:{line:250,column:17}},"122":{start:{line:223,column:20},end:{line:223,column:64}},"123":{start:{line:224,column:20},end:{line:224,column:26}},"124":{start:{line:227,column:20},end:{line:227,column:40}},"125":{start:{line:228,column:20},end:{line:249,column:23}},"126":{start:{line:229,column:24},end:{line:229,column:51}},"127":{start:{line:230,column:34},end:{line:230,column:44}},"128":{start:{line:231,column:32},end:{line:231,column:33}},"129":{start:{line:232,column:24},end:{line:239,column:25}},"130":{start:{line:234,column:38},end:{line:234,column:70}},"131":{start:{line:235,column:28},end:{line:235,column:65}},"132":{start:{line:238,column:28},end:{line:238,column:67}},"133":{start:{line:240,column:24},end:{line:248,column:25}},"134":{start:{line:243,column:28},end:{line:243,column:46}},"135":{start:{line:247,column:28},end:{line:247,column:52}},"136":{start:{line:251,column:16},end:{line:251,column:22}},"137":{start:{line:253,column:16},end:{line:253,column:49}},"138":{start:{line:254,column:16},end:{line:254,column:22}},"139":{start:{line:256,column:16},end:{line:256,column:25}},"140":{start:{line:258,column:16},end:{line:258,column:59}},"141":{start:{line:259,column:16},end:{line:259,column:25}},"142":{start:{line:261,column:8},end:{line:261,column:17}},"143":{start:{line:264,column:8},end:{line:264,column:48}},"144":{start:{line:267,column:0},end:{line:267,column:22}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:29,column:4},end:{line:29,column:5}},loc:{start:{line:29,column:18},end:{line:43,column:5}},line:29},"1":{name:"(anonymous_1)",decl:{start:{line:38,column:20},end:{line:38,column:21}},loc:{start:{line:38,column:35},end:{line:41,column:9}},line:38},"2":{name:"(anonymous_2)",decl:{start:{line:44,column:4},end:{line:44,column:5}},loc:{start:{line:44,column:16},end:{line:54,column:5}},line:44},"3":{name:"(anonymous_3)",decl:{start:{line:55,column:4},end:{line:55,column:5}},loc:{start:{line:55,column:28},end:{line:61,column:5}},line:55},"4":{name:"(anonymous_4)",decl:{start:{line:62,column:4},end:{line:62,column:5}},loc:{start:{line:62,column:32},end:{line:99,column:5}},line:62},"5":{name:"(anonymous_5)",decl:{start:{line:63,column:24},end:{line:63,column:25}},loc:{start:{line:63,column:31},end:{line:95,column:9}},line:63},"6":{name:"(anonymous_6)",decl:{start:{line:65,column:28},end:{line:65,column:29}},loc:{start:{line:65,column:34},end:{line:73,column:13}},line:65},"7":{name:"(anonymous_7)",decl:{start:{line:79,column:42},end:{line:79,column:43}},loc:{start:{line:79,column:47},end:{line:88,column:17}},line:79},"8":{name:"(anonymous_8)",decl:{start:{line:100,column:4},end:{line:100,column:5}},loc:{start:{line:100,column:28},end:{line:192,column:5}},line:100},"9":{name:"(anonymous_9)",decl:{start:{line:122,column:23},end:{line:122,column:24}},loc:{start:{line:122,column:36},end:{line:143,column:17}},line:122},"10":{name:"(anonymous_10)",decl:{start:{line:126,column:33},end:{line:126,column:34}},loc:{start:{line:126,column:38},end:{line:129,column:21}},line:126},"11":{name:"(anonymous_11)",decl:{start:{line:193,column:4},end:{line:193,column:5}},loc:{start:{line:193,column:37},end:{line:262,column:5}},line:193},"12":{name:"(anonymous_12)",decl:{start:{line:212,column:34},end:{line:212,column:35}},loc:{start:{line:212,column:44},end:{line:220,column:21}},line:212},"13":{name:"(anonymous_13)",decl:{start:{line:228,column:47},end:{line:228,column:48}},loc:{start:{line:228,column:54},end:{line:249,column:21}},line:228},"14":{name:"(anonymous_14)",decl:{start:{line:263,column:4},end:{line:263,column:5}},loc:{start:{line:263,column:28},end:{line:265,column:5}},line:263}},branchMap:{"0":{loc:{start:{line:48,column:12},end:{line:50,column:13}},type:"if",locations:[{start:{line:48,column:12},end:{line:50,column:13}},{start:{line:48,column:12},end:{line:50,column:13}}],line:48},"1":{loc:{start:{line:56,column:8},end:{line:58,column:9}},type:"if",locations:[{start:{line:56,column:8},end:{line:58,column:9}},{start:{line:56,column:8},end:{line:58,column:9}}],line:56},"2":{loc:{start:{line:77,column:12},end:{line:94,column:13}},type:"if",locations:[{start:{line:77,column:12},end:{line:94,column:13}},{start:{line:77,column:12},end:{line:94,column:13}}],line:77},"3":{loc:{start:{line:77,column:16},end:{line:77,column:64}},type:"binary-expr",locations:[{start:{line:77,column:16},end:{line:77,column:38}},{start:{line:77,column:42},end:{line:77,column:64}}],line:77},"4":{loc:{start:{line:80,column:20},end:{line:87,column:21}},type:"if",locations:[{start:{line:80,column:20},end:{line:87,column:21}},{start:{line:80,column:20},end:{line:87,column:21}}],line:80},"5":{loc:{start:{line:101,column:8},end:{line:105,column:9}},type:"if",locations:[{start:{line:101,column:8},end:{line:105,column:9}},{start:{line:101,column:8},end:{line:105,column:9}}],line:101},"6":{loc:{start:{line:108,column:8},end:{line:191,column:9}},type:"switch",locations:[{start:{line:109,column:12},end:{line:110,column:50}},{start:{line:111,column:12},end:{line:112,column:52}},{start:{line:113,column:12},end:{line:114,column:51}},{start:{line:115,column:12},end:{line:116,column:52}},{start:{line:117,column:12},end:{line:143,column:18}},{start:{line:144,column:12},end:{line:181,column:17}},{start:{line:182,column:12},end:{line:183,column:50}},{start:{line:184,column:12},end:{line:185,column:33}},{start:{line:186,column:12},end:{line:187,column:28}},{start:{line:188,column:12},end:{line:190,column:33}}],line:108},"7":{loc:{start:{line:132,column:20},end:{line:135,column:21}},type:"if",locations:[{start:{line:132,column:20},end:{line:135,column:21}},{start:{line:132,column:20},end:{line:135,column:21}}],line:132},"8":{loc:{start:{line:137,column:20},end:{line:141,column:21}},type:"if",locations:[{start:{line:137,column:20},end:{line:141,column:21}},{start:{line:137,column:20},end:{line:141,column:21}}],line:137},"9":{loc:{start:{line:154,column:16},end:{line:181,column:17}},type:"if",locations:[{start:{line:154,column:16},end:{line:181,column:17}},{start:{line:154,column:16},end:{line:181,column:17}}],line:154},"10":{loc:{start:{line:154,column:20},end:{line:154,column:49}},type:"binary-expr",locations:[{start:{line:154,column:20},end:{line:154,column:30}},{start:{line:154,column:34},end:{line:154,column:49}}],line:154},"11":{loc:{start:{line:161,column:24},end:{line:162,column:34}},type:"if",locations:[{start:{line:161,column:24},end:{line:162,column:34}},{start:{line:161,column:24},end:{line:162,column:34}}],line:161},"12":{loc:{start:{line:175,column:24},end:{line:177,column:25}},type:"if",locations:[{start:{line:175,column:24},end:{line:177,column:25}},{start:{line:175,column:24},end:{line:177,column:25}}],line:175},"13":{loc:{start:{line:175,column:28},end:{line:175,column:40}},type:"binary-expr",locations:[{start:{line:175,column:28},end:{line:175,column:33}},{start:{line:175,column:37},end:{line:175,column:40}}],line:175},"14":{loc:{start:{line:195,column:8},end:{line:260,column:9}},type:"switch",locations:[{start:{line:196,column:12},end:{line:198,column:22}},{start:{line:199,column:12},end:{line:201,column:22}},{start:{line:202,column:12},end:{line:204,column:22}},{start:{line:205,column:12},end:{line:251,column:22}},{start:{line:252,column:12},end:{line:254,column:22}},{start:{line:255,column:12},end:{line:256,column:25}},{start:{line:257,column:12},end:{line:259,column:25}}],line:195},"15":{loc:{start:{line:206,column:16},end:{line:250,column:17}},type:"if",locations:[{start:{line:206,column:16},end:{line:250,column:17}},{start:{line:206,column:16},end:{line:250,column:17}}],line:206},"16":{loc:{start:{line:206,column:20},end:{line:206,column:57}},type:"binary-expr",locations:[{start:{line:206,column:20},end:{line:206,column:34}},{start:{line:206,column:38},end:{line:206,column:57}}],line:206},"17":{loc:{start:{line:209,column:21},end:{line:250,column:17}},type:"if",locations:[{start:{line:209,column:21},end:{line:250,column:17}},{start:{line:209,column:21},end:{line:250,column:17}}],line:209},"18":{loc:{start:{line:214,column:24},end:{line:219,column:25}},type:"if",locations:[{start:{line:214,column:24},end:{line:219,column:25}},{start:{line:214,column:24},end:{line:219,column:25}}],line:214},"19":{loc:{start:{line:222,column:21},end:{line:250,column:17}},type:"if",locations:[{start:{line:222,column:21},end:{line:250,column:17}},{start:{line:222,column:21},end:{line:250,column:17}}],line:222},"20":{loc:{start:{line:232,column:24},end:{line:239,column:25}},type:"if",locations:[{start:{line:232,column:24},end:{line:239,column:25}},{start:{line:232,column:24},end:{line:239,column:25}}],line:232},"21":{loc:{start:{line:240,column:24},end:{line:248,column:25}},type:"if",locations:[{start:{line:240,column:24},end:{line:248,column:25}},{start:{line:240,column:24},end:{line:248,column:25}}],line:240}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0,0,0,0,0,0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0,0,0,0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"4a4a14c043a52348a5d322a9473e1b3e4a865611"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();cov_1g1hk0x43k.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const tslib_1=(cov_1g1hk0x43k.s[1]++,require("tslib"));const fengari_1=(cov_1g1hk0x43k.s[2]++,tslib_1.__importDefault(require("fengari")));const lbaselib_1=(cov_1g1hk0x43k.s[3]++,require("fengari/src/lbaselib"));const lmathlib_1=(cov_1g1hk0x43k.s[4]++,require("fengari/src/lmathlib"));const lstrlib_1=(cov_1g1hk0x43k.s[5]++,require("fengari/src/lstrlib"));const ltablib_1=(cov_1g1hk0x43k.s[6]++,require("fengari/src/ltablib"));const lcorolib_1=(cov_1g1hk0x43k.s[7]++,require("fengari/src/lcorolib"));const fs_1=(cov_1g1hk0x43k.s[8]++,require("fs"));const path_1=(cov_1g1hk0x43k.s[9]++,require("path"));const lua=(cov_1g1hk0x43k.s[10]++,fengari_1.default.lua);const lauxlib=(cov_1g1hk0x43k.s[11]++,fengari_1.default.lauxlib);const luaBuidinCode=(cov_1g1hk0x43k.s[12]++,fs_1.readFileSync(path_1.join(__dirname,'helpers.lua')).toString());class LuaVm{constructor(){cov_1g1hk0x43k.f[0]++;cov_1g1hk0x43k.s[13]++;this.L=lauxlib.luaL_newstate();// only load basic apis to vm
const map=(cov_1g1hk0x43k.s[14]++,new Map());cov_1g1hk0x43k.s[15]++;map.set('_G',lbaselib_1.luaopen_base).set('string',lstrlib_1.luaopen_string).set('table',ltablib_1.luaopen_table).set('math',lmathlib_1.luaopen_math).set('coroutine',lcorolib_1.luaopen_coroutine);cov_1g1hk0x43k.s[16]++;map.forEach((lib,name)=>{cov_1g1hk0x43k.f[1]++;cov_1g1hk0x43k.s[17]++;lauxlib.luaL_requiref(this.L,fengari_1.default.to_luastring(name),lib,1);cov_1g1hk0x43k.s[18]++;lua.lua_pop(this.L,1);});cov_1g1hk0x43k.s[19]++;this.ctx=new Map();}run(source){cov_1g1hk0x43k.f[2]++;cov_1g1hk0x43k.s[20]++;source=luaBuidinCode+source;cov_1g1hk0x43k.s[21]++;for(const[key,value]of this.ctx){const n=(cov_1g1hk0x43k.s[22]++,this.pushStackValue(this.L,value));cov_1g1hk0x43k.s[23]++;if(n!==0){cov_1g1hk0x43k.b[0][0]++;cov_1g1hk0x43k.s[24]++;lua.lua_setglobal(this.L,key);}else{cov_1g1hk0x43k.b[0][1]++;}}cov_1g1hk0x43k.s[25]++;lauxlib.luaL_dostring(this.L,fengari_1.default.to_luastring(source));cov_1g1hk0x43k.s[26]++;return this.getStackValue(this.L,-1);}set(key,value,target){cov_1g1hk0x43k.f[3]++;cov_1g1hk0x43k.s[27]++;if(typeof value==='function'){cov_1g1hk0x43k.b[1][0]++;cov_1g1hk0x43k.s[28]++;value=this.wrapFunc(key,value,target);}else{cov_1g1hk0x43k.b[1][1]++;}cov_1g1hk0x43k.s[29]++;this.ctx.set(key,value);cov_1g1hk0x43k.s[30]++;return this;}wrapFunc(key,func,target){cov_1g1hk0x43k.f[4]++;cov_1g1hk0x43k.s[31]++;const wrapped=L=>{cov_1g1hk0x43k.f[5]++;cov_1g1hk0x43k.s[32]++;// call in ts
const getArgs=()=>{cov_1g1hk0x43k.f[6]++;const nArgs=(cov_1g1hk0x43k.s[33]++,lua.lua_gettop(L));const args=(cov_1g1hk0x43k.s[34]++,[]);cov_1g1hk0x43k.s[35]++;for(let i=(cov_1g1hk0x43k.s[36]++,0);i<nArgs;i++){const value=(cov_1g1hk0x43k.s[37]++,this.getStackValue(L,i+1));cov_1g1hk0x43k.s[38]++;args.push(value);}cov_1g1hk0x43k.s[39]++;return args;};const args=(cov_1g1hk0x43k.s[40]++,getArgs());// use call function to inject this object
const res=(cov_1g1hk0x43k.s[41]++,func.call(target,...args));cov_1g1hk0x43k.s[42]++;if((cov_1g1hk0x43k.b[3][0]++,res instanceof Promise)&&(cov_1g1hk0x43k.b[3][1]++,lua.lua_isyieldable(L))){cov_1g1hk0x43k.b[2][0]++;cov_1g1hk0x43k.s[43]++;// if a coroutine happened, yield and resume when promise return
Promise.resolve(res).then(r=>{cov_1g1hk0x43k.f[7]++;cov_1g1hk0x43k.s[44]++;if(r===undefined){cov_1g1hk0x43k.b[4][0]++;cov_1g1hk0x43k.s[45]++;// no return value
lua.lua_resume(L,this.L,0);}else{cov_1g1hk0x43k.b[4][1]++;cov_1g1hk0x43k.s[46]++;this.pushStackValue(L,r);cov_1g1hk0x43k.s[47]++;lua.lua_resume(L,this.L,1);}});cov_1g1hk0x43k.s[48]++;return lua.lua_yield(L,0);}else{cov_1g1hk0x43k.b[2][1]++;cov_1g1hk0x43k.s[49]++;// set return value
return this.pushStackValue(L,res);}};// save key as function name for debugging use
cov_1g1hk0x43k.s[50]++;Object.defineProperty(func,'name',{value:key});cov_1g1hk0x43k.s[51]++;return wrapped;}getStackValue(L,index){cov_1g1hk0x43k.f[8]++;cov_1g1hk0x43k.s[52]++;if(lua.lua_gettop(L)===0){cov_1g1hk0x43k.b[5][0]++;cov_1g1hk0x43k.s[53]++;// no value, return undefined first
// otherwise, absindex will fail
return undefined;}else{cov_1g1hk0x43k.b[5][1]++;}cov_1g1hk0x43k.s[54]++;index=lua.lua_absindex(L,index);// change to abs index in case iterate call error
const type=(cov_1g1hk0x43k.s[55]++,lua.lua_type(L,index));cov_1g1hk0x43k.s[56]++;switch(type){case lua.LUA_TNUMBER:cov_1g1hk0x43k.b[6][0]++;cov_1g1hk0x43k.s[57]++;return lua.lua_tonumber(L,index);case lua.LUA_TSTRING:cov_1g1hk0x43k.b[6][1]++;cov_1g1hk0x43k.s[58]++;return lua.lua_tojsstring(L,index);case lua.LUA_TBOOLEAN:cov_1g1hk0x43k.b[6][2]++;cov_1g1hk0x43k.s[59]++;return lua.lua_toboolean(L,index);case lua.LUA_TUSERDATA:cov_1g1hk0x43k.b[6][3]++;cov_1g1hk0x43k.s[60]++;return lua.lua_touserdata(L,index);case lua.LUA_TFUNCTION:cov_1g1hk0x43k.b[6][4]++;cov_1g1hk0x43k.s[61]++;// lua_pushvalue will load index value on stack top
// luaL_ref will pop the value and store as a ref for later use
lua.lua_pushvalue(L,index);const cbRef=(cov_1g1hk0x43k.s[62]++,lauxlib.luaL_ref(L,lua.LUA_REGISTRYINDEX));cov_1g1hk0x43k.s[63]++;return(...args)=>{cov_1g1hk0x43k.f[9]++;// get callback funtion and push to stack top
const oldStackTop=(cov_1g1hk0x43k.s[64]++,lua.lua_gettop(L));cov_1g1hk0x43k.s[65]++;lua.lua_rawgeti(L,lua.LUA_REGISTRYINDEX,cbRef);cov_1g1hk0x43k.s[66]++;args.forEach(p=>{cov_1g1hk0x43k.f[10]++;cov_1g1hk0x43k.s[67]++;// push all args in sequence
this.pushStackValue(L,p);});// call current function
let ret=(cov_1g1hk0x43k.s[68]++,lua.lua_pcall(L,args.length,lua.LUA_MULTRET,0));cov_1g1hk0x43k.s[69]++;if(ret!==lua.LUA_OK){cov_1g1hk0x43k.b[7][0]++;cov_1g1hk0x43k.s[70]++;// If ret !=== lua.LUA_OK, means there are errors while executing the function
console.log(`Error when exec function, ret=${ret}, msg=${this.getStackValue(L,-1)}`);}else{cov_1g1hk0x43k.b[7][1]++;}cov_1g1hk0x43k.s[71]++;ret=undefined;cov_1g1hk0x43k.s[72]++;if(lua.lua_gettop(L)!==oldStackTop){cov_1g1hk0x43k.b[8][0]++;cov_1g1hk0x43k.s[73]++;// after function call, stack top not equal means have return value
// get the last return value from stack
ret=this.getStackValue(L,-1);}else{cov_1g1hk0x43k.b[8][1]++;}cov_1g1hk0x43k.s[74]++;return ret;};case lua.LUA_TTABLE:cov_1g1hk0x43k.b[6][5]++;// only support array and object
let v;cov_1g1hk0x43k.s[75]++;try{cov_1g1hk0x43k.s[76]++;lua.lua_rawgeti(L,index,1);cov_1g1hk0x43k.s[77]++;v=this.getStackValue(L,-1);cov_1g1hk0x43k.s[78]++;lua.lua_pop(L,1);// tslint:disable-next-line: no-empty
}catch(_a){}cov_1g1hk0x43k.s[79]++;if((cov_1g1hk0x43k.b[10][0]++,v!==null)&&(cov_1g1hk0x43k.b[10][1]++,v!==undefined)){cov_1g1hk0x43k.b[9][0]++;// need to check like this
// array
const arr=(cov_1g1hk0x43k.s[80]++,[]);cov_1g1hk0x43k.s[81]++;for(let i=(cov_1g1hk0x43k.s[82]++,1);;i++){cov_1g1hk0x43k.s[83]++;lua.lua_rawgeti(L,index,i);const v=(cov_1g1hk0x43k.s[84]++,this.getStackValue(L,-1));cov_1g1hk0x43k.s[85]++;lua.lua_pop(L,1);cov_1g1hk0x43k.s[86]++;if(!v){cov_1g1hk0x43k.b[11][0]++;cov_1g1hk0x43k.s[87]++;break;}else{cov_1g1hk0x43k.b[11][1]++;}cov_1g1hk0x43k.s[88]++;arr.push(v);}cov_1g1hk0x43k.s[89]++;return arr;}else{cov_1g1hk0x43k.b[9][1]++;const ret=(cov_1g1hk0x43k.s[90]++,{});cov_1g1hk0x43k.s[91]++;lua.lua_pushnil(L);cov_1g1hk0x43k.s[92]++;while(lua.lua_next(L,index)!==0){// iterate keys and values from table at index
// lua_next will push key and value on stack
const value=(cov_1g1hk0x43k.s[93]++,this.getStackValue(L,-1));const key=(cov_1g1hk0x43k.s[94]++,this.getStackValue(L,-2));cov_1g1hk0x43k.s[95]++;if((cov_1g1hk0x43k.b[13][0]++,value)&&(cov_1g1hk0x43k.b[13][1]++,key)){cov_1g1hk0x43k.b[12][0]++;cov_1g1hk0x43k.s[96]++;ret[key]=value;}else{cov_1g1hk0x43k.b[12][1]++;}cov_1g1hk0x43k.s[97]++;lua.lua_pop(L,1);}cov_1g1hk0x43k.s[98]++;return ret;}case lua.LUA_TTHREAD:cov_1g1hk0x43k.b[6][6]++;cov_1g1hk0x43k.s[99]++;return lua.lua_tothread(L,index);case lua.LUA_TNONE:cov_1g1hk0x43k.b[6][7]++;cov_1g1hk0x43k.s[100]++;return undefined;case lua.LUA_TNIL:cov_1g1hk0x43k.b[6][8]++;cov_1g1hk0x43k.s[101]++;return null;default:cov_1g1hk0x43k.b[6][9]++;cov_1g1hk0x43k.s[102]++;console.log(`Not supported type=${type}, index=${index}`);cov_1g1hk0x43k.s[103]++;return undefined;}}pushStackValue(L,value,target){cov_1g1hk0x43k.f[11]++;const type=(cov_1g1hk0x43k.s[104]++,typeof value);cov_1g1hk0x43k.s[105]++;switch(type){case'number':cov_1g1hk0x43k.b[14][0]++;cov_1g1hk0x43k.s[106]++;lua.lua_pushnumber(L,value);cov_1g1hk0x43k.s[107]++;break;case'string':cov_1g1hk0x43k.b[14][1]++;cov_1g1hk0x43k.s[108]++;lua.lua_pushstring(L,value);cov_1g1hk0x43k.s[109]++;break;case'boolean':cov_1g1hk0x43k.b[14][2]++;cov_1g1hk0x43k.s[110]++;lua.lua_pushboolean(L,value);cov_1g1hk0x43k.s[111]++;break;case'object':cov_1g1hk0x43k.b[14][3]++;cov_1g1hk0x43k.s[112]++;if((cov_1g1hk0x43k.b[16][0]++,value===null)||(cov_1g1hk0x43k.b[16][1]++,value===undefined)){cov_1g1hk0x43k.b[15][0]++;cov_1g1hk0x43k.s[113]++;return 0;}else{cov_1g1hk0x43k.b[15][1]++;cov_1g1hk0x43k.s[114]++;if(Array.isArray(value)){cov_1g1hk0x43k.b[17][0]++;cov_1g1hk0x43k.s[115]++;// if pass in an array, push as a table, set index and value
lua.lua_newtable(L);cov_1g1hk0x43k.s[116]++;value.forEach((v,i)=>{cov_1g1hk0x43k.f[12]++;const n=(cov_1g1hk0x43k.s[117]++,this.pushStackValue(L,v));cov_1g1hk0x43k.s[118]++;if(n!==0){cov_1g1hk0x43k.b[18][0]++;cov_1g1hk0x43k.s[119]++;lua.lua_rawseti(L,-2,i+1);}else{cov_1g1hk0x43k.b[18][1]++;cov_1g1hk0x43k.s[120]++;lua.lua_pop(L,1);}});}else{cov_1g1hk0x43k.b[17][1]++;cov_1g1hk0x43k.s[121]++;if(value instanceof Date){cov_1g1hk0x43k.b[19][0]++;cov_1g1hk0x43k.s[122]++;lua.lua_pushstring(L,value.toDateString());cov_1g1hk0x43k.s[123]++;break;}else{cov_1g1hk0x43k.b[19][1]++;cov_1g1hk0x43k.s[124]++;lua.lua_newtable(L);cov_1g1hk0x43k.s[125]++;Object.keys(value).forEach(key=>{cov_1g1hk0x43k.f[13]++;cov_1g1hk0x43k.s[126]++;lua.lua_pushstring(L,key);const v=(cov_1g1hk0x43k.s[127]++,value[key]);let n=(cov_1g1hk0x43k.s[128]++,0);cov_1g1hk0x43k.s[129]++;if(typeof v==='function'){cov_1g1hk0x43k.b[20][0]++;// if the value is function, wrap and bind target and push back
const f=(cov_1g1hk0x43k.s[130]++,this.wrapFunc(v.name,v,target));cov_1g1hk0x43k.s[131]++;n=this.pushStackValue(L,f,value);}else{cov_1g1hk0x43k.b[20][1]++;cov_1g1hk0x43k.s[132]++;n=this.pushStackValue(L,value[key]);}cov_1g1hk0x43k.s[133]++;if(n===0){cov_1g1hk0x43k.b[21][0]++;cov_1g1hk0x43k.s[134]++;// not support type or not push into stack
// pop out the key
lua.lua_pop(L,1);}else{cov_1g1hk0x43k.b[21][1]++;cov_1g1hk0x43k.s[135]++;// set table value into table
lua.lua_settable(L,-3);}});}}}cov_1g1hk0x43k.s[136]++;break;case'function':cov_1g1hk0x43k.b[14][4]++;cov_1g1hk0x43k.s[137]++;lua.lua_pushjsfunction(L,value);cov_1g1hk0x43k.s[138]++;break;case'undefined':cov_1g1hk0x43k.b[14][5]++;cov_1g1hk0x43k.s[139]++;return 0;default:cov_1g1hk0x43k.b[14][6]++;cov_1g1hk0x43k.s[140]++;console.log(`Not supported type: ${type}`);cov_1g1hk0x43k.s[141]++;return 0;}cov_1g1hk0x43k.s[142]++;return 1;}getLuaBuidinCodeLines(){cov_1g1hk0x43k.f[14]++;cov_1g1hk0x43k.s[143]++;return luaBuidinCode.split('\n').length;}}cov_1g1hk0x43k.s[144]++;exports.LuaVm=LuaVm;//# sourceMappingURL=data:application/json;charset=utf-8;base64,